<?php$template_path = get_bloginfo('template_directory');////////////////////////////////////////////////////////////////////////////////// Random post////////////////////////////////////////////////////////////////////////////////function gte_random_posts (){global $wpdb, $post;$current_title = get_the_title();$randompostthis = $wpdb->get_results("SELECT $wpdb->posts.ID, post_title, post_name, post_date, post_type, post_status FROM $wpdb->posts WHERE post_type = 'post' AND post_status = 'publish' AND post_title != '$current_title' ORDER by ID DESC limit 5");foreach ($randompostthis as $post) {$post_title = htmlspecialchars(stripslashes($post->post_title));echo "<li><a href=\"".get_permalink()."\">$post_title</a></li>";}}////////////////////////////////////////////////////////////////////////////////// most comments////////////////////////////////////////////////////////////////////////////////function get_hottopics($limit = 10) {global $wpdb, $post;$mostcommenteds = $wpdb->get_results("SELECT  $wpdb->posts.ID, post_title, post_name, post_date, COUNT($wpdb->comments.comment_post_ID) AS 'comment_total' FROM $wpdb->posts LEFT JOIN $wpdb->comments ON $wpdb->posts.ID = $wpdb->comments.comment_post_ID WHERE comment_approved = '1' AND post_date_gmt < '".gmdate("Y-m-d H:i:s")."' AND post_status = 'publish' AND post_password = '' GROUP BY $wpdb->comments.comment_post_ID ORDER  BY comment_total DESC LIMIT $limit");foreach ($mostcommenteds as $post) {$post_title = htmlspecialchars(stripslashes($post->post_title));$comment_total = (int) $post->comment_total;echo "<li><a href=\"".get_permalink()."\">$post_title&nbsp;<strong>($comment_total)</strong></a></li>";}}////////////////////////////////////////////////////////////////////////////////// grab video meta code from database for wp////////////////////////////////////////////////////////////////////////////////function get_latestvideo() {global $wpdb, $post;$get_the_latest_vids = $wpdb->get_results("SELECT $wpdb->postmeta.meta_id,meta_key,meta_value FROM $wpdb->postmeta WHERE meta_key = 'video-code' ORDER BY meta_id DESC LIMIT 1");foreach ($get_the_latest_vids as $post) {$display_vids = stripcslashes($post->meta_value);echo "<li>$display_vids</li>";}}////////////////////////////////////////////////////////////////////////////////// excerpt short////////////////////////////////////////////////////////////////////////////////function the_excerpt_short($excerpt_length=15, $allowedtags='', $filter_type='none', $use_more_link=true, $more_link_text="Read more...", $force_more_link=false, $fakeit=1, $fix_tags=true) {	if (preg_match('%^content($|_rss)|^excerpt($|_rss)%', $filter_type)) {		$filter_type = 'the_' . $filter_type;	}	$text = apply_filters($filter_type, get_the_excerpt_short($excerpt_length, $allowedtags, $use_more_link, $more_link_text, $force_more_link, $fakeit));	$text = ($fix_tags) ? balanceTags($text) : $text;	echo $text;}function get_the_excerpt_short($excerpt_length, $allowedtags, $use_more_link, $more_link_text, $force_more_link, $fakeit) {	global $id, $post;	$output = '';	$output = $post->post_excerpt;	if (!empty($post->post_password)) { // if there's a password		if ($_COOKIE['wp-postpass_'.COOKIEHASH] != $post->post_password) {  // and it doesn't match the cookie			$output = __('There is no excerpt because this is a protected post.');			return $output;		}	}	// If we haven't got an excerpt, make one.	if ((($output == '') && ($fakeit == 1)) || ($fakeit == 2)) {		$output = $post->post_content;		$output = strip_tags($output, $allowedtags);		$blah = explode(' ', $output);		if (count($blah) > $excerpt_length) {			$k = $excerpt_length;			$use_dotdotdot = 1;		} else {			$k = count($blah);			$use_dotdotdot = 0;		}		$excerpt = '';		for ($i=0; $i<$k; $i++) {			$excerpt .= $blah[$i] . ' ';		}		// Display "more" link (use css class 'more-link' to set layout).		if (($use_more_link && $use_dotdotdot) || $force_more_link) {			$excerpt .= "<a href=\"". get_permalink() . "#more-$id\">$more_link_text</a>";		} else {			$excerpt .= ($use_dotdotdot) ? '...' : '';		}		 $output = $excerpt;	} // end if no excerpt	return $output;}////////////////////////////////////////////////////////////////////////////////// end////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// excerpt featured////////////////////////////////////////////////////////////////////////////////function the_excerpt_featured($excerpt_length=32, $allowedtags='', $filter_type='none', $fakeit=1, $fix_tags=true) {	if (preg_match('%^content($|_rss)|^excerpt($|_rss)%', $filter_type)) {		$filter_type = 'the_' . $filter_type;	}	$text = apply_filters($filter_type, get_the_excerpt_featured($excerpt_length, $allowedtags, $fakeit));	$text = ($fix_tags) ? balanceTags($text) : $text;	echo $text;}function get_the_excerpt_featured($excerpt_length, $allowedtags, $fakeit) {	global $id, $post;	$output = '';	$output = $post->post_excerpt;	if (!empty($post->post_password)) { // if there's a password		if ($_COOKIE['wp-postpass_'.COOKIEHASH] != $post->post_password) {  // and it doesn't match the cookie			$output = __('There is no excerpt because this is a protected post.');			return $output;		}	}	// If we haven't got an excerpt, make one.	if ((($output == '') && ($fakeit == 1)) || ($fakeit == 2)) {		$output = $post->post_content;		$output = strip_tags($output, $allowedtags);		$blah = explode(' ', $output);		if (count($blah) > $excerpt_length) {			$k = $excerpt_length;			$use_dotdotdot = 1;		} else {			$k = count($blah);			$use_dotdotdot = 0;		}		$excerpt = '';		for ($i=0; $i<$k; $i++) {			$excerpt .= $blah[$i] . ' ';		}		// Display "more" link (use css class 'more-link' to set layout).				$excerpt .= ($use_dotdotdot) ? '[...]' : '';			 $output = $excerpt;	} // end if no excerpt	return $output;}////////////////////////////////////////////////////////////////////////////////// end////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// excerpt aside////////////////////////////////////////////////////////////////////////////////function the_excerpt_aside($excerpt_length=15, $allowedtags='', $filter_type='none', $use_more_link=true, $more_link_text="...continue reading", $force_more_link=false, $fakeit=1, $fix_tags=true) {	if (preg_match('%^content($|_rss)|^excerpt($|_rss)%', $filter_type)) {		$filter_type = 'the_' . $filter_type;	}	$text = apply_filters($filter_type, get_the_excerpt_aside($excerpt_length, $allowedtags, $use_more_link, $more_link_text, $force_more_link, $fakeit));	$text = ($fix_tags) ? balanceTags($text) : $text;	echo $text;}function get_the_excerpt_aside($excerpt_length, $allowedtags, $use_more_link, $more_link_text, $force_more_link, $fakeit) {	global $id, $post;	$output = '';	$output = $post->post_excerpt;	if (!empty($post->post_password)) { // if there's a password		if ($_COOKIE['wp-postpass_'.COOKIEHASH] != $post->post_password) {  // and it doesn't match the cookie			$output = __('There is no excerpt because this is a protected post.');			return $output;		}	}	// If we haven't got an excerpt, make one.	if ((($output == '') && ($fakeit == 1)) || ($fakeit == 2)) {		$output = $post->post_content;		$output = strip_tags($output, $allowedtags);		$blah = explode(' ', $output);		if (count($blah) > $excerpt_length) {			$k = $excerpt_length;			$use_dotdotdot = 1;		} else {			$k = count($blah);			$use_dotdotdot = 0;		}		$excerpt = '';		for ($i=0; $i<$k; $i++) {			$excerpt .= $blah[$i] . ' ';		}		// Display "more" link (use css class 'more-link' to set layout).		if (($use_more_link && $use_dotdotdot) || $force_more_link) {			$excerpt .= "<a href=\"". get_permalink() . "#more-$id\">$more_link_text</a>";		} else {			$excerpt .= ($use_dotdotdot) ? '...' : '';		}		 $output = $excerpt;	} // end if no excerpt	return $output;}////////////////////////////////////////////////////////////////////////////////// end////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// excerpt short////////////////////////////////////////////////////////////////////////////////function the_excerpt_mini($excerpt_length=15, $allowedtags='', $filter_type='none', $use_more_link=true, $more_link_text="...continue reading", $force_more_link=false, $fakeit=1, $fix_tags=true) {	if (preg_match('%^content($|_rss)|^excerpt($|_rss)%', $filter_type)) {		$filter_type = 'the_' . $filter_type;	}	$text = apply_filters($filter_type, get_the_excerpt_mini($excerpt_length, $allowedtags, $use_more_link, $more_link_text, $force_more_link, $fakeit));	$text = ($fix_tags) ? balanceTags($text) : $text;	echo $text;}function get_the_excerpt_mini($excerpt_length, $allowedtags, $use_more_link, $more_link_text, $force_more_link, $fakeit) {	global $id, $post;	$output = '';	$output = $post->post_excerpt;	if (!empty($post->post_password)) { // if there's a password		if ($_COOKIE['wp-postpass_'.COOKIEHASH] != $post->post_password) {  // and it doesn't match the cookie			$output = __('There is no excerpt because this is a protected post.');			return $output;		}	}	// If we haven't got an excerpt, make one.	if ((($output == '') && ($fakeit == 1)) || ($fakeit == 2)) {		$output = $post->post_content;		$output = strip_tags($output, $allowedtags);		$blah = explode(' ', $output);		if (count($blah) > $excerpt_length) {			$k = $excerpt_length;			$use_dotdotdot = 1;		} else {			$k = count($blah);			$use_dotdotdot = 0;		}		$excerpt = '';		for ($i=0; $i<$k; $i++) {			$excerpt .= $blah[$i] . ' ';		}		// Display "more" link (use css class 'more-link' to set layout).		if (($use_more_link && $use_dotdotdot) || $force_more_link) {			$excerpt .= "<a href=\"". get_permalink() . "#more-$id\">$more_link_text</a>";		} else {			$excerpt .= ($use_dotdotdot) ? '...' : '';		}		 $output = $excerpt;	} // end if no excerpt	return $output;}////////////////////////////////////////////////////////////////////////////////// end////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Recent Comments////////////////////////////////////////////////////////////////////////////////function mw_recent_comments(	$no_comments = 10,	$show_pass_post = false,	$title_length = 50, 	// shortens the title if it is longer than this number of chars	$author_length = 30,	// shortens the author if it is longer than this number of chars	$wordwrap_length = 50, // adds a blank if word is longer than this number of chars	$type = 'all', 	// Comments, trackbacks, or both?	$format = '<li>%date%: <a href="%permalink%" title="%title%">%title%</a> (von %author_full%)</li>',	$date_format = 'd.m.y, H:i',	$none_found = '<li>Keine Kommentare vorhanden.</li>',	// None found	$type_text_pingback = 'Pingback von',	$type_text_trackback = 'Trackback von',	$type_text_comment = 'von'	) {	//Language...	$mwlang_anonymous = 'Anonym'; // Anonymous	$mwlang_authorurl_title_before = 'Webseite von &lsaquo;';	$mwlang_authorurl_title_after = '&rsaquo; besuchen';    global $wpdb;    $request = "SELECT ID, comment_ID, comment_content, comment_author, comment_author_url, comment_date, post_title, comment_type				FROM $wpdb->comments LEFT JOIN $wpdb->posts ON $wpdb->posts.ID=$wpdb->comments.comment_post_ID				WHERE post_status IN ('publish','static')";	switch($type) {		case 'all':			// add nothing			break;		case 'comment_only':			//			$request .= "AND $wpdb->comments.comment_type='' ";			break;		case 'trackback_only':			$request .= "AND ( $wpdb->comments.comment_type='trackback' OR $wpdb->comments.comment_type='pingback' ) ";			break;	 default: 		//			break;	}	if (!$show_pass_post) $request .= "AND post_password ='' ";	$request .= "AND comment_approved = '1' ORDER BY comment_ID DESC LIMIT $no_comments";	$comments = $wpdb->get_results($request);    $output = '';	if ($comments) {    	foreach ($comments as $comment) {			// Permalink to post/comment			$loop_res['permalink'] = get_permalink($comment->ID). '#comment-' . $comment->comment_ID;			// Title of the post			$loop_res['post_title'] = stripslashes($comment->post_title);			$loop_res['post_title'] = wordwrap($loop_res['post_title'], $wordwrap_length, ' ' , 1);			if (strlen($loop_res['post_title']) >= $title_length) {				$loop_res['post_title'] = substr($loop_res['post_title'], 0, $title_length) . '&#8230;';			}			// Author's name only        	$loop_res['author_name'] = stripslashes($comment->comment_author);			$loop_res['author_name'] = wordwrap($loop_res['author_name'], $wordwrap_length, ' ' , 1);			if ($loop_res['author_name'] == '') $loop_res['author_name'] = $mwlang_anonymous;			if (strlen($loop_res['author_name']) >= $author_length) {				$loop_res['author_name'] = substr($loop_res['author_name'], 0, $author_length) . '&#8230;';			}			// Full author (link, name)			$author_url = $comment->comment_author_url;			if (empty($author_url)) {				$loop_res['author_full'] = $loop_res['author_name'];			} else {				$loop_res['author_full'] = '<a href="' . $author_url . '" title="' . $mwlang_authorurl_title_before . $loop_res['author_name'] . $mwlang_authorurl_title_after . '">' . $loop_res['author_name'] . '</a>';			}/*			// Comment excerpt			$comment_excerpt = strip_tags($comment->comment_content);			$comment_excerpt = stripslashes($comment_excerpt);			if (strlen($comment_excerpt) >= $comment_length) {				$comment_excerpt = substr($comment_excerpt, 0, $comment_length) . '...';			}*/			// Comment type			if ( $comment->comment_type == 'pingback' ) {				$loop_res['comment_type'] = $type_text_pingback;			} elseif ( $comment->comment_type == 'trackback' ) {				$loop_res['comment_type'] = $type_text_trackback;			} else {				$loop_res['comment_type'] = $type_text_comment;			}			// Date of comment			$loop_res['comment_date'] = mysql2date($date_format, $comment->comment_date);			// Output element			$element_loop = str_replace('%permalink%', $loop_res['permalink'], $format);			$element_loop = str_replace('%title%', $loop_res['post_title'], $element_loop);			$element_loop = str_replace('%author_name%', $loop_res['author_name'], $element_loop);			$element_loop = str_replace('%author_full%', $loop_res['author_full'], $element_loop);			$element_loop = str_replace('%date%', $loop_res['comment_date'], $element_loop);			$element_loop = str_replace('%type%', $loop_res['comment_type'], $element_loop);			$output .= $element_loop . "\n";		} //foreach		$output = convert_smilies($output);	} else {		$output .= $none_found;    }    echo $output;}if ( function_exists('register_sidebar') ) {register_sidebar(array('name'=>'Left-Sidebar','before_widget' => '<div class="module"><div><div><div>','after_widget' => '</div></div></div></div>','before_title' => '<h3>','after_title' => '</h3>',));if ( function_exists('register_sidebar') )register_sidebar(array('name'=>'Right-Sidebar','before_widget' => '<div class="module-hilite"><div><div><div>','after_widget' => '</div></div></div></div>','before_title' => '<h3>','after_title' => '</h3>',));function unregister_problem_widgets() {wp_unregister_sidebar_widget('Calendar');wp_unregister_sidebar_widget('RSS 1');wp_unregister_sidebar_widget('Search');wp_unregister_sidebar_widget('FlickrRSS');wp_unregister_sidebar_widget('Recent Comments');wp_unregister_sidebar_widget('Pages');wp_unregister_sidebar_widget('Get Recent Comments');wp_unregister_sidebar_widget('Get Recent Trackbacks');}add_action('widgets_init','unregister_problem_widgets');}// below are widget custom to custom the widget looks without the default //function widget_mytheme_mypopulartopic() {?><?php if(function_exists("akpc_most_popular")) : ?><div class="module-hilite">			<div>				<div>					<div><h3><?php _e('Most Popular'); ?></h3><ul class="list"><?php akpc_most_popular(); ?></ul></div>				</div>			</div>		</div><?php endif; ?><?php}if ( function_exists('wp_register_sidebar_widget') )    wp_register_sidebar_widget(__('My Popular Topics'), 'widget_mytheme_mypopulartopic',NULL);function widget_mytheme_myhottopic() {?><?php if(function_exists("get_hottopics")) : ?><div class="module">			<div>				<div>					<div><h3><?php _e('Most Feedbacks'); ?></h3><ul class="list"><?php get_hottopics(); ?></ul></div>				</div>			</div>		</div><?php endif; ?><?php}if ( function_exists('wp_register_sidebar_widget') )    wp_register_sidebar_widget(__('Hot Topics'), 'widget_mytheme_myhottopic',NULL);function widget_mytheme_myrecentcoms() {?><div class="module">			<div>				<div>					<div><h3><?php _e('Recent Feedbacks'); ?></h3><ul class="list"><?php if(function_exists("get_recent_comments")) : ?><?php get_recent_comments(); ?><?php else : ?><?php mw_recent_comments(10, false, 55, 35, 35, 'all', '<li><a href="%permalink%" title="%title%">%author_name%</a>&nbsp;in&nbsp;%title%</li>','d.m.y, H:i'); ?><?php endif; ?></ul></div>				</div>			</div>		</div><?php}if ( function_exists('wp_register_sidebar_widget') )    wp_register_sidebar_widget(__('Latest Comments'), 'widget_mytheme_myrecentcoms',NULL);////////////////////////////////////////////////////////////////////////////////// theme option menu for mzines - theme cms core control - dezzain studio////////////////////////////////////////////////////////////////////////////////$themename = "Ikarus";$shortname = "tn";$wp_dropdown_cat_admin = get_categories('hide_empty=0&orderby=name');$wp_getcat = array();foreach ($wp_dropdown_cat_admin as $category_list) {$wp_getcat[$category_list->cat_ID] = $category_list->cat_name;}$category_bulk_list = array_unshift($wp_getcat, "Choose a category:");$options = array (    array(	"name" => "Choose Your Blog Style",			"id" => $shortname."_mz_blog_style",            "inblock" => "css",			"type" => "select",            "std" => "blog",			"options" => array("blog", "mzine", "list", "mzine-list")),			    array(	"name" => "Choose Sidebar Position",			"id" => $shortname."_mz_sidebar_style",            "inblock" => "css",			"type" => "select",            "std" => "left",			"options" => array("left", "right")),					array(	"name" => "Choose Content Position (***opposite from above)",			"id" => $shortname."_mz_content_style",            "inblock" => "css",			"type" => "select",            "std" => "right",			"options" => array("left", "right")),								array(	"name" => "Header Logo Image or Site Name Text",			"id" => $shortname."_mz_header_logo",            "inblock" => "css",			"type" => "select",            "std" => "logo",			"options" => array("logo", "sitename")),							array(	"name" => "Choose Your Heading Text Color",			"id" => $shortname."_mz_text_color",            "inblock" => "css",			"type" => "select",            "std" => "blue",			"options" => array("blue", "white", "green", "royalblue", "lilac" , "red", "olive", "pink", "amber", "orange",)),		array(	"name" => "Choose Your Colored Bar",			"id" => $shortname."_mz_bar_color",            "inblock" => "css",			"type" => "select",            "std" => "default",			"options" => array("default", "blue", "green", "royalblue", "lilac" , "red", "olive", "pink", "amber", "orange",)),									array(	"name" => "Choose Your Widget Box Color",			"id" => $shortname."_mz_widget_color",            "inblock" => "css",			"type" => "select",            "std" => "default",			"options" => array("default", "blue", "green", "royalblue", "lilac" , "red", "bright olive", "pink", "amber", "orange",)),					array(	"name" => "Choose Your Footer Color",			"id" => $shortname."_mz_footer_color",            "inblock" => "css",			"type" => "select",            "std" => "default",			"options" => array("default", "blue", "green", "royalblue", "lilac" , "red", "bright olive", "pink", "amber", "orange",)),				    array(	"name" => "Global Content Font Style",			"id" => $shortname."_mz_blog_font_type",            "type" => "select",            "inblock" => "css",			"std" => "Lucida Grande, Verdana, Tahoma, Trebuchet MS",			"options" => array(            "Verdana, Arial, Times New Roman, sans-serif",            "Arial, Verdana, Times New Roman, sans-serif",            "Times New Roman, Georgia, Tahoma, Trajan Pro",            "Georgia, Times New Roman, Helvetica, sans-serif",            "Futura LT Book, Helvetica Neue, Tahoma, Georgia",            "Tahoma, Lucida Sans, Arial",            "Lucida Sans, Lucida Grande, Trebuchet MS",            "Lucida Grande, Verdana, Tahoma, Trebuchet MS",            "Century Gothic, Century, Georgia, Times New Roman",            "Arial Rounded MT Bold, Arial, Verdana, sans-serif",            "Trebuchet MS, Arial, Verdana, Helvetica, sans-serif",            "Futura-CondensedExtraBold-Norma, Arial Black, Tahoma",            "Delicious Heavy, Georgia, Tahoma",            "Delicious, Delicious Heavy, Decker, Denmark",            "Helvetica Neue, Helvetica LT Std Cond, Helvetica-Normal",            "Humana Sans ITC, Humana Sans Md ITC, Lucida Grande, Georgia",            "Qlassik Bold, Qlassik Medium, Trebuchet MS, Tahoma, Arial"            )            ),    array(	"name" => "Global Headline Font Style",			"id" => $shortname."_mz_blog_headline_type",            "type" => "select",            "inblock" => "css",			"std" => "Georgia, Times New Roman, Helvetica, sans-serif",			"options" => array(            "Georgia, Times New Roman, Helvetica, sans-serif",            "Arial, Verdana, Times New Roman, sans-serif",            "Verdana, Arial, Times New Roman, sans-serif",            "Times New Roman, Georgia, Tahoma, Trajan Pro",            "Futura LT Book, Helvetica Neue, Tahoma, Georgia",            "Tahoma, Lucida Sans, Arial",            "Lucida Sans, Lucida Grande, Trebuchet MS",            "Lucida Grande, Verdana, Tahoma, Trebuchet MS",            "Century Gothic, Century, Georgia, Times New Roman",            "Arial Rounded MT Bold, Arial, Verdana, sans-serif",            "Trebuchet MS, Arial, Verdana, Helvetica, sans-serif",            "Futura-CondensedExtraBold-Norma, Arial Black, Tahoma",            "Delicious Heavy, Georgia, Tahoma",            "Delicious, Delicious Heavy, Decker, Denmark",            "Helvetica Neue, Helvetica LT Std Cond, Helvetica-Normal",            "Humana Sans ITC, Humana Sans Md ITC, Lucida Grande, Georgia",            "Qlassik Bold, Qlassik Medium, Trebuchet MS, Tahoma, Arial"            )            ),    array(	"name" => "Global Font Size(px)",			"id" => $shortname."_mz_blog_font_size",            "type" => "select",            "inblock" => "css",			"std" => "12px",			"options" => array("10px", "11px", "12px", "13px", "14px", "15px")),    array(	"name" => "Global Font Line Height(px)",			"id" => $shortname."_mz_blog_line_height",            "type" => "select",            "inblock" => "css",			"std" => "16px",			"options" => array("16px", "17px", "18px", "19px", "20px", "22px", "24px")),    array(	"name" => "Global Image Alignment",			"id" => $shortname."_mz_blog_img_align",            "type" => "select",            "inblock" => "css",			"std" => "none",			"options" => array("none", "left", "right")),    array(	"name" => "Do You Want To Used The Header Image instead of Content Slideshow?",			"id" => $shortname."_mz_header_img_post_status",            "type" => "select",            "inblock" => "inheader",			"std" => "yes",			"options" => array("yes", "no")),    array(	"name" => "Full Url Of The Header Image *908x177 width and height",			"id" => $shortname."_mz_header_image",            "inblock" => "inheader",			"std" => $template_path . "/images/headers/header1.jpg",			"type" => "text"),				    array(	"name" => "Full Url Link for the header image",			"id" => $shortname."_mz_header_url",            "type" => "text",            "inblock" => "inheader",			"std" => "http://www.mysite.com/whatever.html"),      array(	"name" => "Do You Want The Sidebar Featured Articles Section?",			"id" => $shortname."_mz_aside_post_status",            "type" => "select",            "inblock" => "sf",			"std" => "yes",			"options" => array("yes", "no")),									    array(	"name" => "Category Name You Want To Be Featured In Sidebar Featured Section? <em>only effect if this featured enabled</em>",			"id" => $shortname."_mz_aside_post_cat",            "inblock" => "sf",            "std" => "Choose a category",			"type" => "select",            "options" => $wp_getcat),									    array(	"name" => "How Many Post You Want To Be Featured In Sidebar Featured Section? <em>only effect if this featured enabled</em>",			"id" => $shortname."_mz_aside_post_sum",            "inblock" => "sf",			"type" => "select",            "std" => "2",			"options" => array("2", "3", "4", "5", "6", "7")),	     array(	"name" => "Category Name You Want To Be Featured/Sticky In Frontpage?",			"id" => $shortname."_mz_featured_articles_cat",            "inblock" => "feats",            "std" => "Choose a category",			"type" => "select",            "options" => $wp_getcat),    array(	"name" => "How Many Post You Want To Be Featured/Sticky In Frontpage? <em>only effect if feature articles enabled</em>",			"id" => $shortname."_mz_featured_articles_sum",            "inblock" => "feats",			"type" => "select",            "std" => "4",			"options" => array("1", "2", "3", "4", "5", "6", "8", "9" , "10", "12" , "14" , "16")),										array(	"name" => "468x60 Banner Ad (Top) - Image Location",												"inblock" => "banner",						"id" => $shortname."_mz_banner_image",						"std" => $template_path . "/images/topbanner.gif",						"type" => "text"),										array(	"name" => "468x60 Banner Ad (Top) - Destination",												"inblock" => "banner",			    		"id" => $shortname."_mz_banner_url",						"std" => "http://www.webhostingrally.com",			    		"type" => "text"),											array(	"name" => "468x60 Banner Ad (Bottom) - Image Location",												"inblock" => "banner",						"id" => $shortname."_mz_banner2_image",						"std" => $template_path . "/images/topbanner.gif",						"type" => "text"),										array(	"name" => "468x60 Banner Ad (Bottom) - Destination",												"inblock" => "banner",			    		"id" => $shortname."_mz_banner2_url",						"std" => "http://www.webhostingrally.com",			    		"type" => "text"),											array(	"name" => "Banner Ad #1 - Image Location",												"inblock" => "banner",						"id" => $shortname."_mz_ad_image_1",						"std" => $template_path . "/images/df_125x125.gif",						"type" => "text"),										array(	"name" => "Banner Ad #1 - Destination",						"inblock" => "banner",			    		"id" => $shortname."_mz_ad_url_1",						"std" => "http://example.com/ads/ad1_destination.html",			    		"type" => "text"),										array(	"name" => "Banner Ad #2 - Image Location",						"inblock" => "banner",						"id" => $shortname."_mz_ad_image_2",						"std" => $template_path . "/images/df_125x125.gif",						"type" => "text"),										array(	"name" => "Banner Ad #2 - Destination",						"inblock" => "banner",			    		"id" => $shortname."_mz_ad_url_2",						"std" => "http://example.com/ads/ad2_destination.html",			    		"type" => "text"),				array(	"name" => "Banner Ad #3 - Image Location",						"inblock" => "banner",						"id" => $shortname."_mz_ad_image_3",						"std" => $template_path . "/images/df_125x125.gif",						"type" => "text"),										array(	"name" => "Banner Ad #3 - Destination",						"inblock" => "banner",			    		"id" => $shortname."_mz_ad_url_3",						"std" => "http://example.com/ads/ad3_destination.html",			    		"type" => "text"),				array(	"name" => "Banner Ad #4 - Image Location",						"inblock" => "banner",						"id" => $shortname."_mz_ad_image_4",						"std" => $template_path . "/images/df_125x125.gif",						"type" => "text"),										array(	"name" => "Banner Ad #4 - Destination",						"inblock" => "banner",			    		"id" => $shortname."_mz_ad_url_4",						"std" => "http://example.com/ads/ad4_destination.html",			    		"type" => "text"),								array(	"name" => "Banner Ad #5 - Image Location",						"inblock" => "banner",						"id" => $shortname."_mz_ad_image_5",						"std" => $template_path . "/images/df_125x125.gif",						"type" => "text"),								array(	"name" => "Banner Ad #5 - Destination",						"inblock" => "banner",			    		"id" => $shortname."_mz_ad_url_5",						"std" => "http://example.com/ads/ad5_destination.html",			    		"type" => "text"),								array(	"name" => "Banner Ad #6 - Image Location",						"inblock" => "banner",						"id" => $shortname."_mz_ad_image_6",						"std" => $template_path . "/images/df_125x125.gif",						"type" => "text"),								array(	"name" => "Banner Ad #6 - Destination",						"inblock" => "banner",			    		"id" => $shortname."_mz_ad_url_6",						"std" => "http://example.com/ads/ad6_destination.html",			    		"type" => "text")											);function mytheme_mz_admin() {global $themename, $shortname, $options;if ( $_REQUEST['saved'] ) echo '<div id="message" class="updated fade"><p><strong>'.$themename.' settings saved.</strong></p></div>';if ( $_REQUEST['reset'] ) echo '<div id="message" class="updated fade"><p><strong>'.$themename.' settings reset.</strong></p></div>';?><div id="custom-wrap"><div id="custom-container"><div id="live-theme-preview"><h2>Live Preview (will updated when option save)</h2><iframe src="../?preview=true" width="100%" height="300" ></iframe></div><div id="notes"><h3>SPECIAL NOTES:</h3><p>Custom Field Value For Magazine Frontpage Post - <strong>featured-image</strong></p><p>Custom Field Value For Video Post - <strong>video-code</strong></p><p>Custom Field Value For Sidebar Post - <strong>featured-image</strong>s</p><p>All features can activate or deactivate with choice</p></div><form method="post" id="option-mz-form"><div class="option-box"><h5>Your Blog CSS Config</h5><?php foreach ($options as $value) {if (($value['inblock'] == "css") && ($value['type'] == "text")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><input name="<?php echo $value['id']; ?>" id="<?php echo $value['id']; ?>" class="ops-select" type="<?php echo $value['type']; ?>" value="<?php if ( get_settings( $value['id'] ) != "") { echo get_settings( $value['id'] ); } else { echo $value['std']; } ?>" /></p></div><?php } elseif (($value['inblock'] == "css") && ($value['type'] == "select")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><select name="<?php echo $value['id']; ?>" class="ops-select" id="<?php echo $value['id']; ?>"><?php foreach ($value['options'] as $option) { ?><option<?php if ( get_settings( $value['id'] ) == $option) { echo ' selected="selected"'; } elseif ($option == $value['std']) { echo ' selected="selected"'; } ?>><?php echo $option; ?></option><?php } ?></select></p></div><?php } elseif (($value['inblock'] == "css") && ($value['type'] == "textarea")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><?php $valuex = $value['id'];$valuey = stripslashes($valuex);$video_code = get_settings($valuey);?><p><textarea name="<?php echo $valuey; ?>" cols="40%" rows="8" /><?php if ( get_settings($valuey) != "") { echo stripslashes($video_code); } else { echo $value['std']; } ?></textarea></p></div><?php }}?></div><div class="option-box"><h5>Header Image Settings</h5><?php foreach ($options as $value) {if (($value['inblock'] == "inheader") && ($value['type'] == "text")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><input name="<?php echo $value['id']; ?>" id="<?php echo $value['id']; ?>" class="ops-select" type="<?php echo $value['type']; ?>" value="<?php if ( get_settings( $value['id'] ) != "") { echo get_settings( $value['id'] ); } else { echo $value['std']; } ?>" /></p></div><?php } elseif (($value['inblock'] == "inheader") && ($value['type'] == "select")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><select name="<?php echo $value['id']; ?>" class="ops-select" id="<?php echo $value['id']; ?>"><?php foreach ($value['options'] as $option) { ?><option<?php if ( get_settings( $value['id'] ) == $option) { echo ' selected="selected"'; } elseif ($option == $value['std']) { echo ' selected="selected"'; } ?>><?php echo $option; ?></option><?php } ?></select></p></div><?php } elseif (($value['inblock'] == "inheader") && ($value['type'] == "textarea")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><?php $valuex = $value['id'];$valuey = stripslashes($valuex);$video_code = get_settings($valuey);?><p><textarea name="<?php echo $valuey; ?>" cols="40%" rows="8" /><?php if ( get_settings($valuey) != "") { echo stripslashes($video_code); } else { echo $value['std']; } ?></textarea></p></div><?php }}?></div><div class="option-box"><h5>Sidebar Settings</h5><?php foreach ($options as $value) {if (($value['inblock'] == "sf") && ($value['type'] == "text")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><input name="<?php echo $value['id']; ?>" id="<?php echo $value['id']; ?>" class="ops-select" type="<?php echo $value['type']; ?>" value="<?php if ( get_settings( $value['id'] ) != "") { echo get_settings( $value['id'] ); } else { echo $value['std']; } ?>" /></p></div><?php } elseif (($value['inblock'] == "sf") && ($value['type'] == "select")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><select name="<?php echo $value['id']; ?>" class="ops-select" id="<?php echo $value['id']; ?>"><?php foreach ($value['options'] as $option) { ?><option<?php if ( get_settings( $value['id'] ) == $option) { echo ' selected="selected"'; } elseif ($option == $value['std']) { echo ' selected="selected"'; } ?>><?php echo $option; ?></option><?php } ?></select></p></div><?php } elseif (($value['inblock'] == "sf") && ($value['type'] == "textarea")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><?php $valuex = $value['id'];$valuey = stripslashes($valuex);$video_code = get_settings($valuey);?><p><textarea name="<?php echo $valuey; ?>" cols="40%" rows="8" /><?php if ( get_settings($valuey) != "") { echo stripslashes($video_code); } else { echo $value['std']; } ?></textarea></p></div><?php }}?></div><div class="option-box"><h5>Magazine Frontpage Settings</h5><?php foreach ($options as $value) {if (($value['inblock'] == "feats") && ($value['type'] == "text")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><input name="<?php echo $value['id']; ?>" id="<?php echo $value['id']; ?>" class="ops-select" type="<?php echo $value['type']; ?>" value="<?php if ( get_settings( $value['id'] ) != "") { echo get_settings( $value['id'] ); } else { echo $value['std']; } ?>" /></p></div><?php } elseif (($value['inblock'] == "feats") && ($value['type'] == "select")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><select name="<?php echo $value['id']; ?>" class="ops-select" id="<?php echo $value['id']; ?>"><?php foreach ($value['options'] as $option) { ?><option<?php if ( get_settings( $value['id'] ) == $option) { echo ' selected="selected"'; } elseif ($option == $value['std']) { echo ' selected="selected"'; } ?>><?php echo $option; ?></option><?php } ?></select></p></div><?php } elseif (($value['inblock'] == "feats") && ($value['type'] == "textarea")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><?php $valuex = $value['id'];$valuey = stripslashes($valuex);$video_code = get_settings($valuey);?><p><textarea name="<?php echo $valuey; ?>" cols="40%" rows="8" /><?php if ( get_settings($valuey) != "") { echo stripslashes($video_code); } else { echo $value['std']; } ?></textarea></p></div><?php }}?></div><div class="option-box"><h5>Banner Management</h5><?php foreach ($options as $value) {if (($value['inblock'] == "banner") && ($value['type'] == "text")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><input name="<?php echo $value['id']; ?>" id="<?php echo $value['id']; ?>" class="ops-select" type="<?php echo $value['type']; ?>" value="<?php if ( get_settings( $value['id'] ) != "") { echo get_settings( $value['id'] ); } else { echo $value['std']; } ?>" /></p></div><?php } elseif (($value['inblock'] == "banner") && ($value['type'] == "select")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><p><select name="<?php echo $value['id']; ?>" class="ops-select" id="<?php echo $value['id']; ?>"><?php foreach ($value['options'] as $option) { ?><option<?php if ( get_settings( $value['id'] ) == $option) { echo ' selected="selected"'; } elseif ($option == $value['std']) { echo ' selected="selected"'; } ?>><?php echo $option; ?></option><?php } ?></select></p></div><?php } elseif (($value['inblock'] == "banner") && ($value['type'] == "textarea")) { ?><div class="pwrap"><p><?php echo $value['name']; ?>:</p><?php $valuex = $value['id'];$valuey = stripslashes($valuex);$video_code = get_settings($valuey);?><p><textarea name="<?php echo $valuey; ?>" cols="40%" rows="8" /><?php if ( get_settings($valuey) != "") { echo stripslashes($video_code); } else { echo $value['std']; } ?></textarea></p></div><?php }}?></div><p class="submit"><input name="save" type="submit" class="saveme" value="Save changes" /><input type="hidden" name="action" value="save" /></p></form><form method="post"><p class="submit"><input name="reset" type="submit" class="saveme" value="Reset" /><input type="hidden" name="action" value="reset" /></p></form></div> </div><?php}function mytheme_add_mz_admin() {global $themename, $shortname, $options;if(!isset ($_GET['page'])){    $_GET['page'] = "";}if ( $_GET['page'] == basename(__FILE__) ) {if ( 'save' == $_REQUEST['action'] ) {foreach ($options as $value) {update_option( $value['id'], $_REQUEST[ $value['id'] ] ); }foreach ($options as $value) {if( isset( $_REQUEST[ $value['id'] ] ) ) { update_option( $value['id'], $_REQUEST[ $value['id'] ]  ); } else { delete_option( $value['id'] ); } }header("Location: themes.php?page=functions.php&saved=true");die;} else if( 'reset' == $_REQUEST['action'] ) {foreach ($options as $value) {delete_option( $value['id'] ); }header("Location: themes.php?page=functions.php&reset=true");die;}}add_theme_page($themename." Options", "IKARUS Options", 'edit_themes', basename(__FILE__), 'mytheme_mz_admin');}////////////////////////////////////////////////////////////////////////////////// add theme cms pages////////////////////////////////////////////////////////////////////////////////function mytheme_wp_mz_head() { ?><link href="<?php bloginfo('template_directory'); ?>/admin/mz-admin.css" rel="stylesheet" type="text/css" /><?php }add_action('admin_head', 'mytheme_wp_mz_head');add_action('admin_menu', 'mytheme_add_mz_admin');////////////////////////////////////////////////////////////////////////////////// add theme cms readme pages////////////////////////////////////////////////////////////////////////////////function mz_add_theme_page() {    add_theme_page('README', 'README', 'switch_themes', '', 'mz_readme_page');}function mz_readme_page() { ?><div class="wrap"><h2>How To Implement The Custom Field In Mzine Stlye Post</h2><p><img src="<?php bloginfo('template_directory'); ?>/images/admin/c.gif" alt="mzine style"/></p><p>1. Open/write your your post and navigate to bottom of the write panel. you will find the custom field area</p><p><img src="<?php bloginfo('template_directory'); ?>/images/admin/i.gif" alt="feature sidebar" /></p><p>2. enter value key <strong>featured-image</strong> and value of the images url example <em>http://yoursite.com/wp-content/uploads/xxx.gif</em> (this is your internal images link). If you want to insert a <strong>external link</strong> also can example <em>http://google.com/image/big.gif</em><br /> <br /><h2>How To Implement The Custom Field In Sidebar Featured Posts</h2><p><img src="<?php bloginfo('template_directory'); ?>/images/admin/y.gif" alt="loop" /></p><p>1. Open/write your your post and navigate to bottom of the write panel. you will find the custom field area</p><p><img src="<?php bloginfo('template_directory'); ?>/images/admin/i.gif" alt="i" /></p><p>2. enter value key <strong>featured-images</strong> and value of the images url example <em>http://yoursite.com/wp-content/uploads/xxx.gif</em> (this is your internal images link). If you want to insert a <strong>external link</strong> also can example <em>http://google.com/image/big.gif</em><br />  <br /><h2>How To Implement The Custom You Tube Video Field In Sidebar</h2><p><img src="<?php bloginfo('template_directory'); ?>/images/admin/y.gif" alt="loop" /></p><p>1. Open/write your your post and navigate to bottom of the write panel. you will find the custom field area</p><p><img src="<?php bloginfo('template_directory'); ?>/images/admin/i.gif" alt="i" /></p><p>2. enter value key <strong>video-code</strong> and copy and paste the youtube embed post into the value box. Be sure the changed the width and height of your video in both locations in the embed code to Height: 250, Width: 370.<br /></p><h2></h2><br /> <br /></div><?php }add_action('admin_menu', 'mz_add_theme_page');//GsL98DGtpo0W 